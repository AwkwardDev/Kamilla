<Application x:Class="NetworkLogViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:kwpf="clr-namespace:Kamilla.WPF;assembly=Kamilla"
             StartupUri="MainWindow.xaml" ShutdownMode="OnMainWindowClose">
  <Application.Resources>
    <Style x:Key="TitleBarStyle">
      <EventSetter Event="UIElement.MouseLeftButtonDown" Handler="TitleBar_MouseLeftButtonDown"/>
    </Style>
    <DropShadowEffect x:Key="SlimShadowEffect" ShadowDepth="1" />
    <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Path.StrokeThickness" Value="2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Padding="5" Background="Transparent">
              <Path Data="{Binding Path=Content,
                                RelativeSource={RelativeSource TemplatedParent}}"
                    x:Name="PART_Path"
                    Stroke="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                    StrokeThickness="{TemplateBinding Path.StrokeThickness}"
                    SnapsToDevicePixels="True" StrokeLineJoin="Bevel" />
            </Border>

            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke"
                        Value="{Binding Path=Foreground,
                                RelativeSource={RelativeSource TemplatedParent}}"
                        TargetName="PART_Path"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="TitleBarMinimizeButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButtonStyle}">
      <Setter Property="Content" Value="M 0 10 L 10 10"/>
      <EventSetter Event="Click" Handler="Minimize_Click"/>
    </Style>
    <Style x:Key="TitleBarMaximizeButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButtonStyle}">
      <Setter Property="Content" Value="M 0 0 L 10 0 L 10 10 L 0 10 L 0 0 M 0 1 L 10 1"/>
      <EventSetter Event="Click" Handler="Maximize_Click"/>
    </Style>
    <Style x:Key="TitleBarNormalizeButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButtonStyle}">
      <Setter Property="Content" Value="M 3 3 L 3 0 L 10 0 L 10 7 L 7 7 L 7 10 L 0 10 L 0 3 L 7 3 L 7 7"/>
      <EventSetter Event="Click" Handler="Normalize_Click"/>
    </Style>
    <Style x:Key="TitleBarCloseButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource TitleBarButtonStyle}">
      <Setter Property="Content" Value="M 0 0 L 10 10 M 0 10 L 10 0"/>
      <EventSetter Event="Click" Handler="Close_Click"/>
    </Style>

    <ControlTemplate x:Key="CustomTitleBarWindowTemplate" TargetType="{x:Type Window}">
      <Border Margin="10" BorderThickness="1" CornerRadius="3" x:Name="PART_WndBorder"
              BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
              Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Padding="2,0,2,2">
        <Border.Effect>
          <DropShadowEffect ShadowDepth="0" BlurRadius="10" />
        </Border.Effect>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="23" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <Border BorderThickness="0,0,0,1"
                  BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                  Background="Transparent" VerticalAlignment="Center"
                  Style="{StaticResource TitleBarStyle}">

            <Grid>
              <Label Content="{TemplateBinding Title}" VerticalAlignment="Center"
                     VerticalContentAlignment="Center" Margin="5,0,0,0" Padding="0" />

              <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="PART_MinButton"
                        Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Style="{StaticResource TitleBarMinimizeButtonStyle}"/>
                <Button x:Name="PART_NormMaxButton"
                        Foreground="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Button x:Name="PART_CloseButton"
                        Foreground="Red"
                        Style="{StaticResource TitleBarCloseButtonStyle}"/>
              </StackPanel>
            </Grid>
          </Border>

          <ContentPresenter Grid.Row="1" />
        </Grid>
      </Border>
      <ControlTemplate.Triggers>

        <Trigger Property="kwpf:WindowBehavior.HasTitleBarMinimizeButton" Value="False">
          <Setter TargetName="PART_MinButton" Property="Visibility" Value="Collapsed"/>
        </Trigger>
        <Trigger Property="kwpf:WindowBehavior.HasTitleBarMaximizeButton" Value="False">
          <Setter TargetName="PART_NormMaxButton" Property="Visibility" Value="Collapsed"/>
        </Trigger>
        <Trigger Property="kwpf:WindowBehavior.HasTitleBarCloseButton" Value="False">
          <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed"/>
        </Trigger>

        <Trigger Property="WindowState" Value="Maximized">
          <Setter TargetName="PART_NormMaxButton" Property="Style"
                            Value="{StaticResource TitleBarNormalizeButtonStyle}"/>
          <Setter TargetName="PART_WndBorder" Property="Margin" Value="0"/>
          <Setter TargetName="PART_WndBorder" Property="BorderThickness" Value="0"/>
          <Setter TargetName="PART_WndBorder" Property="CornerRadius" Value="0"/>
        </Trigger>
        <Trigger Property="WindowState" Value="Normal">
          <Setter TargetName="PART_NormMaxButton" Property="Style"
                            Value="{StaticResource TitleBarMaximizeButtonStyle}"/>
        </Trigger>

      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="InvertedAeroColors">
      <Style.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrush}" Color="#FF4B4B4B"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrush}" Color="#FF664B2E"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrush}" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.AppWorkspaceBrush}" Color="#FF545454"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrush}" Color="#FF0F0F0F"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrush}" Color="#FF6F6F6F"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrush}" Color="#FF969696"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrush}" Color="#FF1C1C1C"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrush}" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.DesktopBrush}" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.GradientActiveCaptionBrush}" Color="#FF462E15"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.GradientInactiveCaptionBrush}" Color="#FF281B0D"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrush}" Color="#FF929292"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrush}" Color="#FFCC6600"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrush}" Color="#FF000000"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HotTrackBrush}" Color="#FFFF9933"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveBorderBrush}" Color="#FF0B0803"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrush}" Color="#FF403224"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionTextBrush}" Color="#FFBCB1AB"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InfoBrush}" Color="#FF00001E"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrush}" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrush}" Color="#FF0F0F0F"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrush}" Color="#FF0F0F0F"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuHighlightBrush}" Color="#FFCC6600"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrush}" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ScrollBarBrush}" Color="#FF373737"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrush}" Color="#FF000000"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowFrameBrush}" Color="#FF9B9B9B"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrush}" Color="#FFFFFFFF"/>
      </Style.Resources>
    </Style>
    <Style x:Key="DefaultStyle">
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="Window.WindowStyle" Value="None"/>
            <Condition Property="Window.AllowsTransparency" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="Window.Background" Value="Transparent"/>
          <Setter Property="Window.Template" Value="{StaticResource CustomTitleBarWindowTemplate}"/>
        </MultiTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="KamillaStyle">
      <Style.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#FF222222"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowFrameBrushKey}" Color="#FF444444"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ScrollBarBrushKey}" Color="Gray"/>

        <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrushKey}" Color="#FF444444"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveBorderBrushKey}" Color="#FF212121"/>

        <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey}" Color="LightGreen"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrushKey}" Color="DarkGreen"/>

        <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="Black"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey}" Color="DarkGreen"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FF006E00"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey}" Color="#FF009600"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightLightBrushKey}" Color="#FF00AA00"/>

        <SolidColorBrush x:Key="{x:Static SystemColors.AppWorkspaceBrushKey}" Color="DarkGreen"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}" Color="DarkGreen"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey}" Color="DarkGreen"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuHighlightBrush}" Color="LightGreen"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF17AD1A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FF17AD1A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HotTrackBrush}" Color="LightGreen"/>

        <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="#FF17AD1A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="#FF17AD1A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrushKey}" Color="#FF17AD1A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#FF17AD1A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="#FF17AD1A"/>

        <Style x:Key="KamillaStyleBase">
          <Style.Resources>
            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF555555" Offset="0"/>
                  <GradientStop Color="#FF444444" Offset="1"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF585858" Offset="0.0" />
                  <GradientStop Color="#FF505050" Offset="0.5" />
                  <GradientStop Color="#FF484848" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF404040" Offset="0.0" />
                  <GradientStop Color="#FF383838" Offset="0.5" />
                  <GradientStop Color="#FF303030" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="GreenBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF17AD1A" Offset="0.0" />
                <GradientStop Color="#FF14A017" Offset="0.5" />
                <GradientStop Color="#FF118214" Offset="1.0" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Style.Resources>

          <Setter Property="Control.Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}"/>
          <Setter Property="Control.Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource KamillaStyleBase}"/>
        <Style TargetType="{x:Type Grid}" BasedOn="{StaticResource KamillaStyleBase}"/>

        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource KamillaStyleBase}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ProgressBar}">
                <Grid MinHeight="14" MinWidth="200">
                  <Border 
                    Name="PART_Track" 
                    CornerRadius="2" 
                    Background="{StaticResource BackgroundBrush}"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="1" />
                  <Border 
                    Name="PART_Indicator" 
                    CornerRadius="2" 
                    Background="{StaticResource GreenBackgroundBrush}"
                    BorderBrush="{StaticResource BorderBrush}" 
                    BorderThickness="1"
                    HorizontalAlignment="Left" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style x:Key="MenuBaseStyle" TargetType="MenuBase">
          <Setter Property="Background" Value="#FF282828" />
          <Setter Property="BorderBrush" Value="#FF404040" />
          <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        </Style>

        <Style TargetType="Menu" BasedOn="{StaticResource MenuBaseStyle}">
          <Setter Property="Background" Value="{x:Null}" />
        </Style>

        <Style TargetType="ContextMenu" BasedOn="{StaticResource MenuBaseStyle}">
          <Setter Property="SnapsToDevicePixels" Value="True"/>
          <Setter Property="OverridesDefaultStyle" Value="True"/>
          <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
          <Setter Property="HasDropShadow" Value="True"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ContextMenu">
                <Border Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="HasDropShadow" Value="true">
                    <!--<Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>-->
                    <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        
        <Style TargetType="MenuItem">

          <Style.Resources>
            <LinearGradientBrush x:Key="HighlightedBackgroundBrush" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF3F3F3F" Offset="0.0"/>
                <GradientStop Color="#FF424242" Offset="0.67"/>
                <GradientStop Color="#FF454545" Offset="1.0"/>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Style.Resources>

          <Setter Property="Foreground" Value="{Binding Path=Foreground,
            RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}"/>
          <Setter Property="Background" Value="{Binding Path=Background,
            RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}"/>
          <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush,
            RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type MenuItem}">
                <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto"
                                        SharedSizeGroup="MenuItemIconColumnGroup"/>
                      <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                      <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                      <ColumnDefinition x:Name="Col3" Width="14"/>
                    </Grid.ColumnDefinitions>

                    <!-- ContentPresenter to show an Icon if needed -->
                    <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon"
                                      VerticalAlignment="Center" ContentSource="Icon"/>

                    <!-- Glyph is a checkmark if needed for a checkable menu -->
                    <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel"
                          VerticalAlignment="Center">
                      <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}"
                            Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                    </Grid>

                    <!-- Content for the menu text etc -->
                    <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>

                    <!-- Content for the menu IGT -->
                    <ContentPresenter Grid.Column="2"
                                          Margin="8,1,8,1"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                          VerticalAlignment="Center"/>

                    <!-- Arrow drawn path which points to the next level of the menu -->
                    <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                      <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                    </Grid>

                    <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                    <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Right" x:Name="SubMenuPopup" Focusable="false"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                      <Border x:Name="SubMenuBorder" BorderBrush="#FF404040"
                              BorderThickness="2" Background="#FF282828" CornerRadius="4">
                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                          <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                          <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Grid>
                      </Border>
                    </Popup>
                  </Grid>
                </Border>

                <!-- These triggers re-configure the four arrangements of MenuItem
                     to show different levels of menu via Role -->
                <ControlTemplate.Triggers>
                  <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                  <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background">
                      <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1">
                          <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FF404040" Offset="0.0" />
                            <GradientStop Color="#FF383838" Offset="0.5" />
                            <GradientStop Color="#FF303030" Offset="1.0" />
                          </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="{StaticResource {x:Static SystemColors.InactiveBorderBrushKey}}"/>
                    <Setter Property="Padding" Value="6,1,6,1"/>
                    <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                    <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                    <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                  </Trigger>

                  <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                  <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Padding" Value="6,1,6,1"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                  </Trigger>

                  <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                  <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="Padding" Value="0,2,0,2"/>
                  </Trigger>

                  <!-- Role = SubMenuItem : this is a child menu item which has children-->
                  <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="Padding" Value="0,2,0,2"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                  </Trigger>
                  <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                  </Trigger>

                  <!-- If no Icon is present the we collapse the Icon Content -->
                  <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                  </Trigger>

                  <!-- The GlyphPanel contains the CheckMark -->
                  <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                  </Trigger>

                  <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                  <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightedBackgroundBrush}"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightedBackgroundBrush}"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FF727272"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
          <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush,
            RelativeSource={RelativeSource AncestorType={x:Type MenuBase}}}"/>

          <Setter Property="Height" Value="2"/>
          <!--<Setter Property="Margin" Value="0,4,0,4"/>-->
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="Separator">
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="2"/>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style TargetType="ListView">
          <Setter Property="ItemContainerStyle">
            <Setter.Value>
              <Style TargetType="{x:Type ListViewItem}">
                <Style.Resources>
                  <LinearGradientBrush x:Key="ListItemHoverFill" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FF404040" Offset="0.0" />
                      <GradientStop Color="#FF383838" Offset="0.5" />
                      <GradientStop Color="#FF303030" Offset="1.0" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                  <LinearGradientBrush x:Key="ListItemSelectedFill" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FF585858" Offset="0.0" />
                      <GradientStop Color="#FF505050" Offset="0.5" />
                      <GradientStop Color="#FF484848" Offset="1.0" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Style.Resources>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                      <Border CornerRadius="2" SnapsToDevicePixels="True"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"   
                                                Background="{TemplateBinding Background}">
                        <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
                          <GridViewRowPresenter Grid.RowSpan="2"   
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"   
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
                          <Setter Property="BorderBrush" Value="#FF444444" />
                          <!--<Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{StaticResource ListItemSelectedFill}" />
                          <Setter Property="BorderBrush" Value="#FF666666" />
                        </Trigger>
                        <!--<MultiTrigger> 
                <MultiTrigger.Conditions> 
                    <Condition Property="IsSelected" Value="True" /> 
                    <Condition Property="Selector.IsSelectionActive" Value="False" /> 
                </MultiTrigger.Conditions> 
                <Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}" /> 
                <Setter Property="BorderBrush" Value="#FFCFCFCF" /> 
            </MultiTrigger>-->
                        <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}" />
                                <Setter Property="BorderBrush" Value="#FF98DDFB" />
                            </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Setter.Value>
          </Setter>

          <Setter Property="BorderBrush" Value="{x:Null}" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>

          <Style.Resources>

            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF404040" Offset="0.0" />
                  <GradientStop Color="#FF383838" Offset="0.5" />
                  <GradientStop Color="#FF303030" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HighlightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF3F3F3F" Offset="0.0"/>
                  <GradientStop Color="#FF424242" Offset="0.67"/>
                  <GradientStop Color="#FF454545" Offset="1.0"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF555555" Offset="0"/>
                  <GradientStop Color="#FF444444" Offset="1"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF585858" Offset="0.0" />
                  <GradientStop Color="#FF505050" Offset="0.5" />
                  <GradientStop Color="#FF484848" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
              <Setter Property="Width" Value="10"/>
              <Setter Property="Background" Value="Black"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                      <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                      <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Background" Value="LightGreen"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>

            <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="Padding" Value="3"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                      <Border Name="HeaderBorder" Padding="{TemplateBinding Padding}"
                              BorderThickness="0,1,0,1" BorderBrush="{StaticResource BorderBrush}"
                              Background="{StaticResource BackgroundBrush}">
                        <ContentPresenter Name="HeaderContent" Margin="0,0,0,1"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          />
                      </Border>
                      <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-5,0"
                             Style="{StaticResource GridViewColumnHeaderGripper}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="HeaderBorder" Property="Background"
                                Value="{StaticResource HighlightBackgroundBrush}"/>
                      </Trigger>
                      <Trigger Property="IsPressed" Value="true">
                        <Setter TargetName="HeaderBorder" Property="Background"
                                Value="{StaticResource PressedBorderBrush}"/>
                        <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                      </Trigger>
                      <Trigger Property="IsKeyboardFocused"  Value="true">
                        <Setter TargetName="HeaderBorder" Property="BorderBrush"
                                Value="LightGreen"/>
                      </Trigger>
                      <Trigger Property="IsFocused"  Value="true">
                        <Setter TargetName="HeaderBorder" Property="BorderBrush"
                                Value="LightGreen"/>
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                  <Setter Property="Opacity" Value="0.7"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="GridViewColumnHeader">
                        <Canvas Name="PART_FloatingHeaderCanvas">
                          <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}"
                                     Height="{TemplateBinding ActualHeight}"/>
                        </Canvas>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border Name="HeaderBorder" BorderThickness="0,1,0,1"
                                BorderBrush="{StaticResource BorderBrush}" Background="{StaticResource BackgroundBrush}"/>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
          </Style.Resources>
        </Style>

        <!-- SCROLLBAR STUFF -->

        <SolidColorBrush x:Key="ScrollBarPressedBackgroundBrush" Color="#FF454545"/>
        <LinearGradientBrush x:Key="ScrollBarBorderBrush" StartPoint="0,0" EndPoint="0,1">
          <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
              <GradientStop Color="#FF555555" Offset="0"/>
              <GradientStop Color="#FF444444" Offset="1"/>
            </GradientStopCollection>
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ScrollBarBorderHBrush" StartPoint="0,0" EndPoint="1,0">
          <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
              <GradientStop Color="#FF555555" Offset="0"/>
              <GradientStop Color="#FF444444" Offset="1"/>
            </GradientStopCollection>
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#FF282828" />
        <SolidColorBrush x:Key="ScrollBarThumbBorderBrush" Color="#FF454545" />
        <LinearGradientBrush x:Key="ScrollBarThumbBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0">
          <GradientBrush.GradientStops>
            <GradientStopCollection>
              <GradientStop Color="#FF454545" Offset="0.0"/>
              <GradientStop Color="#FF333333" Offset="1.0"/>
            </GradientStopCollection>
          </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ScrollBarThumbBackgroundHBrush"
            StartPoint="0,0" EndPoint="0,1">
          <GradientBrush.GradientStops>
            <GradientStopCollection>
              <GradientStop Color="#FF454545" Offset="0.0"/>
              <GradientStop Color="#FF333333" Offset="1.0"/>
            </GradientStopCollection>
          </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarGlyphBrush" Color="#FF17AD1A" />

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
          <Setter Property="SnapsToDevicePixels" Value="True"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Setter Property="Focusable" Value="false"/>
          <Setter Property="Background" Value="Transparent" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type RepeatButton}">
                <Border
          Name="Border"
          Margin="1"
          CornerRadius="1"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1">
                  <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource ScrollBarGlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource ScrollBarPressedBackgroundBrush}" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
          <Setter Property="SnapsToDevicePixels" Value="True"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Setter Property="IsTabStop" Value="false"/>
          <!--<Setter Property="Focusable" Value="false"/>-->
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type RepeatButton}">
                <Border Background="Transparent" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
          <Setter Property="SnapsToDevicePixels" Value="True"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Setter Property="IsTabStop" Value="false"/>
          <Setter Property="Focusable" Value="false"/>
          <Setter Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Thumb}">
                <Border
                        CornerRadius="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1" />
                <ControlTemplate.Triggers>
                  <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Background"
                                Value="{StaticResource ScrollBarPressedBackgroundBrush}" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="18"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="1"
                    BorderBrush="{StaticResource ScrollBarBorderHBrush}" BorderThickness="1"
                    Background="{StaticResource ScrollBarBackgroundBrush}"/>
            <RepeatButton Name="PART_RepBtn1" Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18"
                          Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb Background="{StaticResource ScrollBarThumbBackgroundBrush}"
                       Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                              Command="ScrollBar.PageDownCommand" />
              </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Name="PART_RepBtn2" Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18"
                          Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="PART_RepBtn1" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundBrush}" />
              <Setter TargetName="PART_RepBtn2" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundBrush}" />
              <Setter TargetName="PART_RepBtn1" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
              <Setter TargetName="PART_RepBtn2" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
          <Grid >
            <Grid.ColumnDefinitions>
              <ColumnDefinition MaxWidth="18"/>
              <ColumnDefinition Width="0.00001*"/>
              <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="1"
                    BorderBrush="{StaticResource ScrollBarBorderHBrush}" BorderThickness="1"
                    Background="{StaticResource ScrollBarBackgroundBrush}"/>
            <RepeatButton Name="PART_RepBtn1" Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"
                          Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb Background="{StaticResource ScrollBarThumbBackgroundHBrush}"
                       Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
              </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Name="PART_RepBtn2" Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18"
                          Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="PART_RepBtn1" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundHBrush}" />
              <Setter TargetName="PART_RepBtn2" Property="Background" Value="{StaticResource ScrollBarThumbBackgroundHBrush}" />
              <Setter TargetName="PART_RepBtn1" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
              <Setter TargetName="PART_RepBtn2" Property="BorderBrush" Value="{StaticResource ScrollBarThumbBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
          <Setter Property="SnapsToDevicePixels" Value="True"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
              <Setter Property="Width" Value="Auto"/>
              <Setter Property="Height" Value="18" />
              <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
              <Setter Property="Width" Value="18"/>
              <Setter Property="Height" Value="Auto" />
              <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
          </Style.Triggers>
        </Style>

        <!-- TABS -->
        <Style TargetType="{x:Type TabControl}">
          <Style.Resources>
            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF404040" Offset="0.0" />
                  <GradientStop Color="#FF383838" Offset="0.5" />
                  <GradientStop Color="#FF303030" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HighlightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF3F3F3F" Offset="0.0"/>
                  <GradientStop Color="#FF424242" Offset="0.67"/>
                  <GradientStop Color="#FF454545" Offset="1.0"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF555555" Offset="0"/>
                  <GradientStop Color="#FF444444" Offset="1"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF4C4C4C" Offset="0.0" />
                  <GradientStop Color="#FF444444" Offset="0.5" />
                  <GradientStop Color="#FF3C3C3C" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <Style TargetType="{x:Type TabItem}">
              <Setter Property="HorizontalContentAlignment" Value="Center"/>
              <Setter Property="VerticalContentAlignment" Value="Center"/>
              <Setter Property="Padding" Value="8,3"/>
              <Setter Property="Foreground" Value="{Binding Path=Foreground,
                      RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="TabItem">
                    <Grid>
                      <Border Name="HeaderBorder" Padding="{TemplateBinding Padding}"
                              Margin="0,0,1,0"
                              BorderThickness="0" BorderBrush="{StaticResource BorderBrush}"
                              Background="{StaticResource BackgroundBrush}">
                        <ContentPresenter Name="HeaderContent" Margin="0,0,0,1"
                                      ContentSource="Header"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          />
                      </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource HighlightBackgroundBrush}"/>
                      </Trigger>
                      <Trigger Property="IsSelected" Value="true">
                        <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource PressedBorderBrush}"/>
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Style.Resources>

          <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
          <Setter Property="SnapsToDevicePixels" Value="true"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="TabControl">
                <Border BorderThickness="1" BorderBrush="#FF444444">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border BorderThickness="0,0,0,1"
                            BorderBrush="{StaticResource BorderBrush}"
                            Background="#FF2C2C2C">
                      <TabPanel IsItemsHost="True"/>
                    </Border>

                    <ContentPresenter Grid.Row="1" ContentSource="SelectedContent" Margin="0"/>
                  </Grid>
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <!-- COMBO BOX -->

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
          <Style.Resources>
            <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FFF" Offset="0.0"/>
                  <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FFF" Offset="0.0"/>
                  <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF222222" />
            <SolidColorBrush x:Key="GlyphBrush" Color="#FF17AD1A" />
            <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#CCC" Offset="0.0"/>
                  <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#CCC" Offset="0.0"/>
                  <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
            <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
              <GradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FFF" Offset="0.0"/>
                  <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
              </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF585858" Offset="0.0" />
                  <GradientStop Color="#FF505050" Offset="0.5" />
                  <GradientStop Color="#FF484848" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF404040" Offset="0.0" />
                  <GradientStop Color="#FF383838" Offset="0.5" />
                  <GradientStop Color="#FF303030" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HighlightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF3F3F3F" Offset="0.0"/>
                  <GradientStop Color="#FF424242" Offset="0.67"/>
                  <GradientStop Color="#FF454545" Offset="1.0"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF555555" Offset="0"/>
                  <GradientStop Color="#FF444444" Offset="1"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                      x:Name="Border" 
                      Grid.ColumnSpan="2"
                      CornerRadius="1"
                      Background="{StaticResource BackgroundBrush}"
                      BorderBrush="{StaticResource BorderBrush}"
                      BorderThickness="1" />
                <Path 
                    x:Name="Arrow"
                    Grid.Column="1"
                    Fill="{StaticResource GlyphBrush}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackgroundBrush}" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                  <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
              <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>
          </Style.Resources>

          <Setter Property="SnapsToDevicePixels" Value="true"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
          <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
          <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ComboBox">
                <Grid>
                  <ToggleButton 
                              Name="ToggleButton"
                              Template="{StaticResource ComboBoxToggleButton}" 
                              Focusable="false"
                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press">
                  </ToggleButton>
                  <ContentPresenter
                                    Name="ContentSite"
                                    IsHitTestVisible="False" 
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Margin="3,1,23,3"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left" />
                  <TextBox x:Name="PART_EditableTextBox"
                        Style="{x:Null}" 
                        Template="{StaticResource ComboBoxTextBox}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center" 
                        Margin="3,3,23,3"
                        Focusable="True" 
                        Background="Transparent"
                        Visibility="Hidden"
                        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                  <Popup 
                      Name="Popup"
                      Placement="Bottom"
                      IsOpen="{TemplateBinding IsDropDownOpen}"
                      AllowsTransparency="True" 
                      Focusable="False"
                      PopupAnimation="Slide">
                    <Grid 
                      Name="DropDown"
                      SnapsToDevicePixels="True"                
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                      <Border 
                        x:Name="DropDownBorder"
                        Background="{StaticResource WindowBackgroundBrush}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BorderBrush}"/>
                      <ScrollViewer Margin="2,4,2,3" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                      </ScrollViewer>
                    </Grid>
                  </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                  </Trigger>
                  <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                  </Trigger>
                  <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2"/>
                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                  </Trigger>
                  <Trigger Property="IsEditable"
                       Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
          </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
          <Style.Resources>
            <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF585858" Offset="0.0" />
                  <GradientStop Color="#FF505050" Offset="0.5" />
                  <GradientStop Color="#FF484848" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF404040" Offset="0.0" />
                  <GradientStop Color="#FF383838" Offset="0.5" />
                  <GradientStop Color="#FF303030" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HighlightBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF3F3F3F" Offset="0.0"/>
                  <GradientStop Color="#FF424242" Offset="0.67"/>
                  <GradientStop Color="#FF454545" Offset="1.0"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF555555" Offset="0"/>
                  <GradientStop Color="#FF444444" Offset="1"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Style.Resources>

          <Setter Property="SnapsToDevicePixels" Value="true"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="Button">
                <Border
                  x:Name="Border" 
                  CornerRadius="1"
                  Background="{StaticResource BackgroundBrush}"
                  BorderBrush="{StaticResource BorderBrush}"
                  BorderThickness="1">
                  <ContentPresenter
                                    Name="ContentSite"
                                    IsHitTestVisible="False" 
                                    ContentSource="{TemplateBinding Content}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center" />
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackgroundBrush}" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style TargetType="StatusBar">
          <Style.Resources>
            <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF404040" Offset="0.0" />
                  <GradientStop Color="#FF383838" Offset="0.5" />
                  <GradientStop Color="#FF303030" Offset="1.0" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="#FF555555" Offset="0"/>
                  <GradientStop Color="#FF444444" Offset="1"/>
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Style.Resources>

          <Setter Property="SnapsToDevicePixels" Value="True"/>
          <Setter Property="OverridesDefaultStyle" Value="true"/>
          <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type StatusBar}">
                <Border
                        Background="{StaticResource BackgroundBrush}"
                        BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                  <ItemsPresenter/>
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

      </Style.Resources>

      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="Window.WindowStyle" Value="None"/>
            <Condition Property="Window.AllowsTransparency" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="Window.Background" Value="Transparent"/>
          <Setter Property="Window.Template" Value="{StaticResource CustomTitleBarWindowTemplate}"/>
        </MultiTrigger>
      </Style.Triggers>

    </Style>
  </Application.Resources>
</Application>
